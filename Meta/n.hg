s : Meta.s
# tensor operators and phenomenon collections.

# Finite Element:
FE[type T, delegate(const Vector, const Vector) : T] : Vec[Vec]

countupVolume[type T](in : Mat[T],  cut : Vec[T], size : Int) : Vec[T]
countupLattice[type T](in : Mat[T], cut : Vec[T], size : Int) : Vec[T]
generateNormalDist[type T](size : Int) : Vec[T]

# geometry
geomIndex[type T]() : Equation[T]
ker(e : Equation) : Int
dim(e : Equation) : Int
coker(e : Equation) : Int
  res = dim(e) - ker(e)
jacobi(e : Equation) : Mat
eigens(e : Equation) : Vec
factor(e : Equation) : Vec[Equation]
differentialForm(e : Equation) : Equation
solve(e : Equation) : Equation
approximate(e : Equation, f : Equation) : Equation
poincare(e: Equation, f : Equation) : Equation
# render(e : Equation) : Vec[Vec ...]

