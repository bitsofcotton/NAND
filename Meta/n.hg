s : Meta.s
# tensor operators and phenomenon collections.

# Finite Element:
type FE[def type, delegate(const Vector, const Vector) : type] : Array[Vector]

countupVolume(in : Array[Array[type] ], cut : Array[type], size : Int) : Array[type]
countupLattice(in : Array[Array[type] ], cut : Array[type], size : Int) : Array[type]
generateNormalDist(size : Int) : Array[type]

# geometry
type geomIndex : Equation
ker(e : Equation) : Int
dim(e : Equation) : Int
coker(e : Equation) : Int
  res = dim(e) - ker(e)
jacobi(e : Equation) : Matrix
eigens(e : Equation) : Vector
factor(e : Equation) : Array[Equation]
differentialForm(e : Equation) : Equation
solve(e : Equation) : Equation
approximate(e : Equation, f : Equation) : Equation
poincare(e: Equation, f : Equation) : Equation
# render(e : Equation) : Vector[Vector ...]

