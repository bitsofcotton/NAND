load Meta.s
load Meta.2
load Meta.n
# graphics, geometry.

type Glay[def type] : type

type RGB[def type] : Object
  r : type
  g : type
  b : type
  ctor(Glay[type] src)
    r = type(src)
    g = type(src)
    b = type(src)
  friend Glay()
    # not optimal, we should refer color space in wikipedia.
    res = (r + g + b) / type(3)
  -  () : this
  != () : this
  += () : this
  def ensure() : this
  # ...

type RGBA[def type] : Quarternion[type]
  def rgba : Quarternion[type]
  -  ()
  != ()
  += ()
  def ensure() : this

type HSV[def type] : Object
  h : type
  s : type
  v : type
  -  () : this
  != () : this
  += () : this
  def ensure() : this

type HSB<def type> : Object
  h : type
  s : type
  b : type
  -  () : this
  != () : this
  += () : this
  def ensure() : this

type Lab<def type> : Object
  l : type
  a : type
  b : type
  -  ()
  != ()
  += ()
  def ensure() : this

type ColorDigital[def type] : Vector[type]
  -  ()
  != ()
  += ()
  def ensure() : this

type ColorAnalogue[def type, def func] : Object
  -  ()
  != ()
  += ()
  friend ColorDigital[type]()
  def ensure() : this

type Texture[def color] : Matrix[color]
  ctor(const Complex[Int])
  ctor(xywh : , ** File **)
  dtor() : void
  <<store!(xywh : , t : Texture)
  -clear!(xywh : , c : color)
  +point!(xy : Complex, c : color)
  +line!(xy : Complex, c : color)
  # make pattern
  +plot!(e : Equaion, xywh)
  +splot!(e : Equation, xyzwhz)
  +maze!(wh)
  # friend on them???
  +tilt(mesh : , xywh)
  +poincare!(e : Equation, Matrix)
  friend SVG(t : Texture)
  # illust...
  # font is the implementation depends implementation.
  +renderFont[type type]()

type PlayMovie[def color, def driver] : Texture[color]
  ctor()
  <<play!()

# Widgets: dom xml base. referes w3c minimal set. huge...

# geometry
type geomIndex : Equation
ker(e : Equation) : Int
dim(e : Equation) : Int
coker(e : Equation) : Int
  res = dim(e) - ker(e)
jacobi(e : Equation) : Matrix
eigens(e : Equation) : Vector
factor(e : Equation) : Array[Equation]
differentialForm(e : Equation) : Equation
solve(e : Equation) : Equation
approximate(e : Equation, f : Equation) : Equation
poincare(e: Equation, f : Equation) : Equation
# render(e : Equation) : Vector[Vector ...]

type SoundBuffer : Vector
type SoundGeom
type Instruments

